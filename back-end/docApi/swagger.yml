swagger: '2.0'
info:
  version: 1.0.0
  title: Quizz movie
  description: 'https://github.com/paul604/quizz-movie'
  contact:
    name: Support
    email: NC
    url: 'https://github.com/paul604/quizz-movie/issues'
  license:
    name: MIT
    url: 'https://github.com/paul604/quizz-movie/blob/master/LICENSE'
host: lp-miar-groupe01-cloned-paul604.c9users.io/quiz-omdb-1.0.0
basePath: /
tags:
  - name: API
paths:
  /:
    get:
      operationId: root
      summary: Home
      tags:
        - API
      responses:
        '200':
          description: OK
          schema:
            properties:
              server:
                type: string
                enum:
                  - OK
  /question:
    get:
      summary: Get a new question
      operationId: getQuestion
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: The token of the user
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '400':
          description: Error not defined
          schema:
            properties:
              error:
                type: string
                enum:
                  - error not defined
                description: msg of error
        '405':
          description: Invalid token
          schema:
            $ref: '#/definitions/E405'
  /response:
    post:
      summary: Verify an answers
      operationId: postResponse
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: The token of the user
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              result:
                type: boolean
        '400':
          description: Error not defined
          schema:
            properties:
              error:
                type: string
                enum:
                  - error msg
                description: msg of error
        '405':
          description: Invalid token
          schema:
            $ref: '#/definitions/E405'
  /login:
    post:
      summary: Login a user
      operationId: postLogin
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: login
          description: login
          required: true
          schema:
            required:
              - Login
              - Password
            properties:
              Login:
                type: string
                example: login
                description: The login of the user
              Password:
                description: The password of the user
                type: string
                example: pwd
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/token'
        '401':
          description: Login or password invalid
          schema:
            properties:
              error:
                type: string
                enum:
                  - Login or password invalid
                description: msg of error
  /register:
    post:
      summary: Register a user
      operationId: postRegister
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Register
          description: Register
          required: true
          schema:
            required:
              - Login
              - Password
            properties:
              Login:
                type: string
                example: login
                description: The future login of the user
              Password:
                description: The future password of the user
                type: string
                example: pwd
      responses:
        '200':
          description: OK
          schema:
            properties:
              result:
                type: string
                enum:
                  - ok
        '409':
          description: Login already used
          schema:
            properties:
              error:
                type: string
                enum:
                  - login already used
                description: msg of error
  /disconnect:
    post:
      summary: Disconnect user
      operationId: post Disconnect
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: The token of the user
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              result:
                type: string
                enum:
                  - ok
        '405':
          description: Invalid token
          schema:
            $ref: '#/definitions/E405'
  /goodanswers:
    get:
      summary: Return the number of good answers of the user
      operationId: getGoodanswers
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: The token of the user
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              goodanswers:
                type: number
                description: number of good answers
        '405':
          description: Invalid token
          schema:
            $ref: '#/definitions/E405'
  /answers:
    get:
      summary: Return the number of answers of the user
      operationId: getAnswers
      tags:
        - API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: The token of the user
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            properties:
              answers:
                type: number
                description: number of answers
        '405':
          description: Invalid token
          schema:
            $ref: '#/definitions/E405'
definitions:
  E405:
    type: object
    properties:
      error:
        type: string
        enum:
          - error Invalid token
        description: msg of error
  token:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        example: >-
          eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsb2dpbiJ9.7crGOpfi96uUsmDAZoPx-PAFktRU5vmQKIduEgx2PHz_K5NGC4uyvkX_PPDqS1_NZ2v9xJHtaWTQx8r-9Qa3zA
  Question:
    type: object
    required:
      - value
    properties:
      question:
        type: string
        example: When the movie XXX has been released?
      poster:
        type: string
        enum:
          - 'http://example.com/example.png'
          - ''
